/**Given a non-empty array of integers, return the k most frequent elements.

For example,
Given [1,1,1,2,2,3] and k = 2, return [1,2].*/


class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> count;
        for(vector<int>::iterator it=nums.begin();it!=nums.end();++it)
            ++count[*it];
        multimap<int,int,greater<int>> VecSort;
        for( unordered_map<int, int>::iterator  it=count.begin();it!=count.end();++it)
        {
             VecSort.insert(pair<int, int>((it->second), it->first));
        }

        vector<int> result(k,0);
        multimap<int,int>::iterator it=VecSort.begin();
          for (int i = 0; i <k; ++i,++it) {  
           result[i]=it->second;
        }  
        return result;
    }
};
